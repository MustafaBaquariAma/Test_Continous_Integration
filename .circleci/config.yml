# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

        #    working_directory: ~/repo/

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - run: pwd && ls -lsrt -a 
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline
      - run: pwd && ls -lsrt -a
      - run: env

      - run: echo $AWS_SECRET_ACCESS_KEY
      - run: echo $AWS_ACCESS_KEY_ID 

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
        
      # run tests!
      - run: mvn install
        #      - run: cd 
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
           - ./
                  #            - ./target/my-app-1.0-SNAPSHOT.war
                  #            - ./.elasticbeanstalk
      



  deploy:
    docker:
      - image: circleci/openjdk:8-jdk
    attach_workspace:
      at : /home/circleci/project/
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - run: curl -O https://bootstrap.pypa.io/get-pip.py
      - run: python get-pip.py --user
      - run: readlink test 
      - run: echo "export PATH=/home/circleci/.local/bin/:$PATH" > ~/.python_path
      - run: source ~/.python_path && pip install awscli --upgrade --user
      - run: source ~/.python_path && pip install awsebcli --upgrade --user
      - run: source ~/.python_path && aws --version
      - run: source ~/.python_path && eb --version
      - run: env && pwd && ls -lsrt -a
      - run: cat .elasticbeanstalk/config.yml
      - run: echo $AWS_ACCESS_KEY_ID
      - run: echo $AWS_SECRET_ACCESS_KEY
      - run: source ~/.python_path && eb deploy cognitiveServer-prd-env
   

workflows:
  version: 2
  build-test-lint:
    jobs:
      - build
      - deploy:
          requires:
            - build
